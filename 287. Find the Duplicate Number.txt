PROB LINK => https://leetcode.com/problems/find-the-duplicate-number/description/
APPROCHES LINK => https://leetcode.com/problems/find-the-duplicate-number/solutions/1892921/9-approaches-count-hash-in-place-marked-sort-binary-search-bit-mask-fast-slow-pointers/

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        unordered_map<int,int>mp;
        int ans=0;
        for(int i=0;i<nums.size();i++)
        {
            if(mp.find(nums[i])==mp.end())
                mp[nums[i]]++;
            else
            {
                ans=nums[i];
                break;
            }
        }
        return ans;
    }
};

